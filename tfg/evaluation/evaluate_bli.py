import argparse
from tfg.utilities import phrase_table_to_dict, validation_file_to_dict


def mean_reciprocal_rank(bili_dict, validation_dict):
    """
    Calculates mean reciprocal rank taking into consideration the common terms between one bilingual dictionary that
    will be evaluated and a "ground truth" validation dictionary
    :param bili_dict: bilingual dictionary to evaluate
    :param validation_dict: "ground truth" bilingual dictionary
    :return: the mean reciprocal rank computed
    :rtype: float
    """
    queries = 0
    score = 0

    for k, v in validation_dict.items():
        candidates = bili_dict.get(k, [])
        if candidates:
            for i, term in enumerate(candidates, start=1):
                if term == v[0]:
                    score += 1/i
                    break
            queries += 1

    mean = score/queries
    return mean


def main():
    parser = argparse.ArgumentParser(description='Validates phrase tables and dictionaries generated by the system')
    parser.add_argument('--src', help='source dictionary phrase table file')
    parser.add_argument('--phrase_table', default=True, help="True if the file to evaluate is in phrase-table format")
    parser.add_argument('--validation_file', help='file containing a phrase table or bilingual dictionary'
                                                  'with which to validate the given phrase table')

    args = parser.parse_args()

    if args.phrase_table:
        source_dict = phrase_table_to_dict(args.src)
    else:
        source_dict = validation_file_to_dict(args.src)

    validation_dict = validation_file_to_dict(args.validation_file)
    mrr = mean_reciprocal_rank(source_dict, validation_dict)
    print("Mean Reciprocal Rank: " + str(mrr))


if __name__ == '__main__':
    main()